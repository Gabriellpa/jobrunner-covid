plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.google.protobuf' version "0.8.14"
	id "com.google.cloud.tools.jib" version "3.1.4"
}

group = 'br.com.gabriellpa'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext{
	set("springCloudVersion","2020.0.3")
	set("jobrunrVesion", "4.0.3")

}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation 'redis.clients:jedis:3.7.0'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
	implementation "org.jobrunr:jobrunr-spring-boot-starter:${jobrunrVesion}"

	// GRPC
	compileOnly 'net.devh:grpc-client-spring-boot-starter:2.12.0.RELEASE'
	implementation "io.grpc:grpc-protobuf:1.35.0"
	implementation "io.grpc:grpc-stub:1.35.0"
	compileOnly 'jakarta.annotation:jakarta.annotation-api:1.3.5'
	implementation 'net.devh:grpc-client-spring-boot-autoconfigure:2.12.0.RELEASE'

}


protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:3.14.0"
	}
	generatedFilesBaseDir = "$projectDir/src/grpc"
	clean {
		delete generatedFilesBaseDir
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:1.35.0"
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}


/**
 *  Configuração para considerar o diretório GRPC, gerado automaticamente, como source code
 *  sendo necessário só rodar a task para gerar o código no diretório configurado
 */
sourceSets {
	grpc {
		java {
			srcDir 'src/grpc/main/grpc'
			srcDir 'src/grpc/main/java'
		}
	}
	main {
		compileClasspath += sourceSets.grpc.output
		runtimeClasspath += sourceSets.grpc.output
	}
}

configurations {
	grpcImplementation.extendsFrom implementation
	grpcRuntimeOnly.extendsFrom runtimeOnly
}

jib {
	from {
		image = "openjdk:11.0.13"
	}
	to {
		image = "gabriellpa/orchestrator-jobs"
	}
	container {
		jvmFlags = ['-Xms512m', '-Xdebug']
		mainClass = 'br.com.gabriellpa.joborchestrator.JobOrchestratorApplication'
		args = []
		ports = ['8080/tcp']
	}
}